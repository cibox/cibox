---
# This playbook should be executed using ansible-playbook command
# Developed for ansible version >= 1.7
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # this variable will be overridden from jenkins.
    workspace_root: .
    artifacts_file: commentinfo.md
    webroot: http://localhost
    installation_profile_name: pp
    phpcs_extensions: php,inc,install,module
    phpcs_features_extensions: module
    custom_modules_path: sites/all/modules/custom/
    custom_themes_path: sites/all/themes/custom
    features_path: sites/all/modules/features
    features_ignore_path: sites/all/features/nonstandard
    ignore_path: sites/all/themes/circle
    composer_global_require:
      - drupal/coder:dev-7.x-2.x
      - squizlabs/php_codesniffer=*
    git_repos:
      - { branch: 'master', repo: 'http://git.drupal.org/sandbox/coltrane/1921926.git', name: 'DrupalSecure' } # git clone --branch master http://git.drupal.org/sandbox/coltrane/1921926.git DrupalSecure
      - { branch: '7.x-1.x', repo: 'https://github.com/klausi/drupalpractice.git', name: 'DrupalPractice' } #git clone --branch 7.x-1.x https://github.com/klausi/drupalpractice.git DrupalPractice
      - { branch: 'master', repo: 'https://github.com/podarok/Symfony2-coding-standard.git', name: 'Symfony2' }
    phpcs_standards_packs:
      - { path: '/root/.composer/vendor/drupal/coder/coder_sniffer/Drupal', name: 'Drupal' } #/root/.composer/vendor/drupal/coder/coder_sniffer/Drupal Drupal
      - { path: '/root/.composer/vendor/podarok/DrupalSecure/DrupalSecure', name: 'DrupalSecure' } #/root/.composer/vendor/podarok/DrupalSecure DrupalSecure
      - { path: '/root/.composer/vendor/podarok/DrupalPractice/DrupalPractice', name: 'DrupalPractice' } #/root/.composer/vendor/podarok/DrupalPractice DrupalPractice
      - { path: '/root/.composer/vendor/podarok/Symfony2', name: 'Symfony2' }

    phpcs_standards:
      - Drupal
      - DrupalPractice
      - DrupalSecure

    jshint_folders:
      - { name: 'modules', path: 'sites/all/modules/custom' }
      - { name: 'themes', path: 'sites/all/themes/custom' }
      - { name: 'profile', path: 'profiles/pp' }

    scsslint_folders:
      - { name: 'themes', path: 'sites/all/themes/custom' }

    phpcs_drupal_sniffs:
      - Drupal.Array.Array
      - Drupal.Classes.ClassCreateInstance
      - Drupal.Classes.ClassDeclaration
      - Drupal.Classes.InterfaceName
      - Drupal.Commenting.DocCommentAlignment
      - Drupal.Commenting.FileComment
      - Drupal.Commenting.FunctionComment
      - Drupal.Commenting.InlineComment
      - Drupal.ControlStructures.ControlSignature
      - Drupal.ControlStructures.ElseCatchNewline
      - Drupal.ControlStructures.ElseIf
      - Drupal.ControlStructures.InlineControlStructure
      - Drupal.ControlStructures.TemplateControlStructure
      - Drupal.CSS.ClassDefinitionClosingBraceSpace
      - Drupal.CSS.ClassDefinitionNameSpacing
      - Drupal.CSS.ClassDefinitionOpeningBraceSpace
      - Drupal.CSS.ColourDefinition
      - Drupal.CSS.Indentation
      - Drupal.Files.LineLength
      - Drupal.Files.TxtFileLineLength
      - Drupal.Formatting.DisallowCloseTag
      - Drupal.Formatting.MultiLineAssignment
      - Drupal.Formatting.SpaceInlineIf
      - Drupal.Formatting.SpaceUnaryOperator
      - Drupal.Functions.DiscouragedFunctions
      - Drupal.Functions.FunctionDeclaration
      - Drupal.InfoFiles.ClassFiles
      - Drupal.InfoFiles.Required
      - Drupal.NamingConventions.KeywordLowerCase
      - Drupal.NamingConventions.ValidClassName
      - Drupal.NamingConventions.ValidFunctionName
      - Drupal.NamingConventions.ValidGlobal
      - Drupal.NamingConventions.ValidVariableName
      - Drupal.Semantics.Br
      - Drupal.Semantics.ConstantName
      - Drupal.Semantics.EmptyInstall
      - Drupal.Semantics.FunctionAlias
      - Drupal.Semantics.FunctionCall
      - Drupal.Semantics.FunctionT
      - Drupal.Semantics.FunctionWatchdog
      - Drupal.Semantics.InstallHooks
      - Drupal.Semantics.InstallT
      - Drupal.Semantics.LStringTranslatable
      - Drupal.Semantics.PregSecurity
      - Drupal.Semantics.RemoteAddress
      - Drupal.Semantics.TInHookMenu
      - Drupal.Semantics.TInHookSchema
      - Drupal.Strings.ConcatenationSpacing
      - Drupal.Strings.UnnecessaryStringConcat
      - Drupal.WhiteSpace.CloseBracketSpacing
      - Drupal.WhiteSpace.EmptyLines
      - Drupal.WhiteSpace.FileEnd
      - Drupal.WhiteSpace.ObjectOperatorIndent
      - Drupal.WhiteSpace.ObjectOperatorSpacing
      - Drupal.WhiteSpace.OpenBracketSpacing
      - Drupal.WhiteSpace.OperatorSpacing
      - Drupal.WhiteSpace.ScopeClosingBrace
      - Drupal.WhiteSpace.ScopeIndent

    phpcs_drupal_sniffs_skip: []

    phpcs_sniffs:
      Drupal: "{{ phpcs_drupal_sniffs | difference(phpcs_drupal_sniffs_skip) }}"

  pre_tasks:

  - name: Install composer global requires
    sudo: yes
    shell: "composer global require {{ item }}"
    with_items: composer_global_require
    tags:
      - sniffers
      - composer
      - git

  - name: Install global git repos
    sudo: yes
    git: repo={{ item.repo }} dest=/root/.composer/vendor/podarok/{{ item.name }} version={{ item.branch }}
    with_items: git_repos
    #ignore_errors: yes
    tags:
      - sniffers
      - git

  - name: Install php codesniffer standards
    sudo: yes
    file: src={{ item.path }} dest=/usr/share/php/PHP/CodeSniffer/Standards/{{ item.name }} state=link
    with_items: phpcs_standards_packs
    tags:
      - sniffers
      - git

  - name: PHP CodeSniffer
    sudo: yes
    shell: 'echo "CodeSniffer: {{ item }} standard file {{ webroot }}/{{ item }}sniff.txt" >> {{ workspace_root }}/{{ artifacts_file }} && phpcs --standard={{ item }} --extensions={{ phpcs_extensions }} -n {{ custom_modules_path }} profiles/{{ installation_profile_name }} {{ custom_themes_path }} --report-file={{ item }}sniff.txt --ignore={{ ignore_path }}'
    with_items: phpcs_standards

  - name: PHP CodeSniffer for features
    sudo: yes
    shell: 'echo "CodeSniffer: Features {{ item }} standard file {{ webroot }}/Features{{ item }}sniff.txt" >> {{ workspace_root }}/{{ artifacts_file }} && phpcs --standard={{ item }} --extensions={{ phpcs_features_extensions }} -n {{ features_path }} --report-file=Features{{ item }}sniff.txt --ignore={{ features_ignore_path }}'
    with_items: phpcs_standards
    
  - name: JSHint
    sudo: yes
    shell: 'echo "JSHint: {{ item.name }} standard file {{ webroot }}/{{ item.name }}jshint.txt" >> {{ workspace_root }}/{{ artifacts_file }} && find {{ item.path }} ! -path "*mute*" -type f \( -iname "*.js" ! -iname "*min.js" \) -print0 | sudo xargs -0 jshint > {{ item.name }}jshint.txt'
    with_items: "jshint_folders"

  - name: SCSS lint
    sudo: yes
    ignore_errors: yes
    shell: 'echo "SCSS-lint: {{ item.name }} standard file {{ webroot }}/scsslint{{ item.name }}.txt" >> {{ workspace_root }}/{{ artifacts_file }} && find {{ item.path }} -name "*.scss" -print0 | xargs -0 scss-lint > scsslint{{ item.name }}.txt || true'
    with_items: scsslint_folders

  - name: Website credentials
    lineinfile: dest={{ workspace_root }}/{{ artifacts_file }} line="Build site installed at {{ webroot }}"
