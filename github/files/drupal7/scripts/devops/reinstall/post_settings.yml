---
# This script contains commands to fill out Drupal settings before installation.
# Executes only for "SQL workflow".
- name: Getting name for settings (WINDOWS)
  set_fact: platform_settings_file={{ tmp_folder }}/reinstall_settings.php
  when: is_windows

- name: Getting name for settings (UNIX)
  set_fact: platform_settings_file={{ settings_file_path }}
  when: is_windows == false

- name: Copy settings to tmp folder (WINDOWS)
  shell: cp {{ settings_file_path }} {{ platform_settings_file }}
  when: is_windows

- name: Add general post-settings to settings.php
  lineinfile: dest='{{ platform_settings_file }}' line='{{ item.name }} = \"{{ item.value }}\";'
  when: item.status == true
  with_items: global_env.post_settings

- name: Add environment specific post-settings
  lineinfile: dest='{{ platform_settings_file }}' line='{{ item.name }} = \"{{ item.value }}\";'
  when: item.status == true
  with_items: env.post_settings

- name: Checking a domain_access is enabled
  shell: 'drush pml --status=enabled -l {{ site_url }} | grep -c "(domain)" || true'
  register: drupal_domain_access_enabled

- name: Finding a domain_access module path
  shell: 'find . -name "domain.info" | head -n 1 |cut -d"." -f2-3 | rev | cut -d"/" -f2- | rev || true'
  register: drupal_domain_access_path

- name: Add specific domain_access settings
  lineinfile: dest='{{ platform_settings_file }}' line='include DRUPAL_ROOT . "{{ drupal_domain_access_path.stdout }}/settings.inc";'
  when: drupal_domain_access_enabled.stdout != "0" and drupal_domain_access_path.stdout != ""

- name: Copy settings back (WINDOWS)
  shell: cp {{ platform_settings_file }} {{ settings_file_path }}
  when: is_windows
