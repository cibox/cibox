---
# This playbook should be executed using 
# ansible-playbook jenkinsbox.yml
# command
# Developed for ansible version >= 1.7
# drupal subfolder with repo_subfolder name will be prepared after execution.

- hosts: 127.0.0.1
  connection: local
  gather_facts: no

  roles:

  vars:
    repo_subfolder: DEMO # name of the future project, should be changed manually
    drupal_subfolder: docroot
    installation_profile_name: pp
    drupal_version: 8
    with_vm: True
    with_tests: True
    with_reinstall: True

  pre_tasks:

  - name: Creating project folder
    shell: "mkdir {{ repo_subfolder }} || true"

  - name: Creating drupal folder
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }} state=directory
    register: drupal_stat

  - name: Downloading drupal to {{ drupal_subfolder }} subfolder
    shell: "cd {{ repo_subfolder }} && drush -y --drupal-project-rename={{ drupal_subfolder }} dl drupal-8.0.0-beta16"
    when: drupal_stat.changed == True
    register: drupal_dl

  - name: Inject pp profile into drupal
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/profiles/{{ installation_profile_name }} state=directory
    register: is_profile

  - name: Copy local profile files to drupal directory
    synchronize: src=files/drupal{{ drupal_version }}/profiles/{{ installation_profile_name }}/ dest={{ repo_subfolder }}/{{ drupal_subfolder }}/profiles/{{ installation_profile_name }}/ recursive=yes archive=no
    register: profile_copy

  - name: Create folder placeholders for sniffers 1
    shell: "mkdir {{ repo_subfolder }}/{{ drupal_subfolder }}/modules/custom/"
    ignore_errors: yes

  - name: Create folder placeholders for sniffers 2
    shell: "mkdir {{ repo_subfolder }}/{{ drupal_subfolder }}/modules/contrib"
    ignore_errors: yes

  - name: Create folder placeholders for sniffers 3
    shell: "mkdir {{ repo_subfolder }}/{{ drupal_subfolder }}/themes/custom/"
    ignore_errors: yes

  - name: Create folder placeholders for sniffers 4
    shell: "mkdir {{ repo_subfolder }}/{{ drupal_subfolder }}/themes/contrib/"
    ignore_errors: yes

  - name: Create folder placeholders for sniffers 5
    shell: "mkdir {{ repo_subfolder }}/{{ drupal_subfolder }}/modules/features"
    ignore_errors: yes

  - name: Create empty readme files for placeholders 1
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/modules/custom/readme.txt state=touch

  - name: Create empty readme files for placeholders 2
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/modules/contrib/readme.txt state=touch

  - name: Create empty readme files for placeholders 3
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/themes/custom/readme.txt state=touch

  - name: Create empty readme files for placeholders 4
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/themes/contrib/readme.txt state=touch

  - name: Create empty readme files for placeholders 5
    file: path={{ repo_subfolder }}/{{ drupal_subfolder }}/modules/features/readme.txt state=touch

  - name: Restrict access to YAML files
    lineinfile:
      dest: '{{ repo_subfolder }}/{{ drupal_subfolder }}/.htaccess'
      line: '# Restrict access to YAML files.\n<Files ~ "\.yml$">\n  Order Allow,Deny\n  Deny from All\n</Files>'

  - name: Injecting behat tests into repo
    synchronize: src=files/tests dest={{ repo_subfolder }}/ recursive=yes archive=no
    when: with_vm == True
    register: vmbox

  - name: Injecting vmbox into repo
    synchronize: src=files/vagrant/box/ dest={{ repo_subfolder }}/ recursive=yes archive=no
    when: with_tests == True
    register: tests

  - name: Add ansible roles to vagrant box
    synchronize: src=../roles/ dest={{ repo_subfolder }}/provisioning/ansible/roles/ recursive=yes archive=no
    when: with_vm == True
    register: vmbox

  - name: Copying installation scripts - reinstall.sh and playbook reinstall.yml
    synchronize: src=files/drupal{{ drupal_version }}/scripts/ dest={{ repo_subfolder }}/{{ drupal_subfolder }}/ recursive=yes archive=no
    when: with_reinstall == True

  - name: Setting permissions for drupal tree
    file: path={{ repo_subfolder }} state=directory mode=777 recurse=yes
    when: drupal_dl.changed == True or profile_copy.changed == True or vmbox.changed == True

  handlers:
