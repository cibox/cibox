---
# tasks file for docker.ubuntu
- name: Fail if not a new release of Ubuntu
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"
  when: ansible_distribution_version|version_compare(12.04, '<') or ansible_distribution_version|version_compare(12.10, '=')

- name: Update kernel, kernel extras, Xorg pkgs, and related tasks
  include: kernel_check_and_update.yml
  when: kernel_update_and_reboot_permitted or install_kernel_extras

- name: Add Docker repository key
  apt_key:
    id: "{{ apt_key_sig }}"
    url: "{{ apt_key_url }}"
    state: present
  register: add_repository_key
  ignore_errors: true

- name: Alternative | Add Docker repository key
  shell: "curl -sSL {{ apt_key_url }} | sudo apt-key add -"
  when: add_repository_key|failed

- name: HTTPS APT transport for Docker repository
  apt:
    name: apt-transport-https
    state: present

- name: Add Docker repository and update apt cache
  apt_repository:
    repo: "{{ apt_repository }}"
    mode: '644'
    update_cache: yes
    state: present

- name: Install (or update) docker package
  shell: "apt-get -qq install {{ docker_pkg_name }}"
  sudo: yes

- name: Set docker daemon options
  copy:
    content: "DOCKER_OPTS=\"{{ docker_opts.rstrip('\n') }}\""
    dest: /etc/default/docker
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart docker
  when: docker_opts != "" and ansible_distribution_version|version_compare(15.04, '<')

- name: Create systemd configuration directory for Docker service (systemd)
  file:
    dest: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755
  when: docker_opts != "" and ansible_distribution_version|version_compare(15.04, '>=')

- name: Set docker daemon options (systemd)
  copy:
    content: |
      [Service]
      Environment="DOCKER_OPTS={{ docker_opts.rstrip('\n') }}"
    dest: /etc/systemd/system/docker.service.d/env.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart docker
  when: docker_opts != "" and ansible_distribution_version|version_compare(15.04, '>=')

- name: Ensure docker daemon options used (systemd)
  template:
    src: docker.conf
    dest: /etc/systemd/system/docker.service.d/docker.conf
  notify:
    - Reload systemd
    - Restart docker
  when: docker_opts != "" and ansible_distribution_version|version_compare(15.04, '>=')



# Upgrade pip with pip to fix angstwad/docker.ubuntu/pull/35 and docker-py/issues/525
# Install latest version when no specific release is set.
- name: Upgrade latest pip, setuptools, docker-py and docker-compose with pip
  pip:
    name: "{{ item.name }}"
    state: latest
  with_items:
    - { name: pip, version: "{{ pip_version_pip }}", install: "{{ pip_install_pip }}" }
    - { name: setuptools, version: "{{ pip_version_setuptools }}", install: "{{ pip_install_setuptools }}" }
    - { name: docker-py, version: "{{ pip_version_docker_py }}", install: "{{ pip_install_docker_py }}" }
    - { name: docker-compose, version: "{{ pip_version_docker_compose }}", install: "{{ pip_install_docker_compose }}" }
  when: (item.version=="latest" and item.install)
  ignore_errors: yes

# Install specific version when set in the variables
- name: Install specific pip, setuptools, docker-py and docker-compose with pip
  pip:
    name: "{{ item.name }}"
    state: present
    version: "{{ item.version }}"
  with_items:
    - { name: pip, version: "{{ pip_version_pip }}", install: "{{ pip_install_pip }}" }
    - { name: setuptools, version: "{{ pip_version_setuptools }}", install: "{{ pip_install_setuptools }}" }
    - { name: docker-py, version: "{{ pip_version_docker_py }}", install: "{{ pip_install_docker_py }}" }
    - { name: docker-compose, version: "{{ pip_version_docker_compose }}", install: "{{ pip_install_docker_compose }}" }
  when: (item.version!="latest" and item.install)
  ignore_errors: yes

- name: Check if /etc/updatedb.conf exists
  stat:
    path: /etc/updatedb.conf
  register: updatedb_conf_exists

- name: Ensure updatedb does not index /var/lib/docker
  lineinfile:
    dest: /etc/updatedb.conf
    state: present
    backrefs: yes
    regexp: '^PRUNEPATHS="(/var/lib/docker )?(.*)"$'
    line: 'PRUNEPATHS="/var/lib/docker \2"'
  when: updatedb_conf_exists.stat.exists

- name: Check if /etc/default/ufw exists
  stat:
    path: /etc/default/ufw
  register: ufw_default_exists

- name: Change ufw default forward policy from drop to accept
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: "DEFAULT_FORWARD_POLICY=\"ACCEPT\""
  when: ufw_default_exists.stat.exists

- name: Start docker
  service:
    name: docker
    state: started

  # ATTENTION: this task can potentially create new users!
- name: Add users to the docker group
  user:
    name:   "{{ item }}"
    groups: docker
    append: yes
  with_items: "{{docker_group_members}}"
  when: docker_group_members is defined

- name: update facts if docker0 is not defined
  action: setup filter="ansible_docker0"
  when: ansible_docker0 is not defined
